// -----------------------------------------------------------------------------
// MEDIA QUERIES BREAKPOINTS
// Used by the mq() mixin

$mq-breakpoints: (
  xxxsmall: 0,
  xxsmall: 320,
  xsmall: 480,
  small: 640,
  medium: 768,
  large: 960,
  xlarge: 1024,
  xxlarge: 1200,
  xxxlarge: 1400,
  xxxxlarge: 1680,
) !default;

// -----------------------------------------------------------------------------
// MEDIA QUERIES MIXIN
// Usage examples:
//  - mq(medium down)
//  - mq(large up)
//  - mq(between small large)
//  - mq(portrait)
//  - mq(portrait, between small medium, xxxxlarge up, xsmall down)
// Numeric values instead of keywords are acceptable as well:
//  - mq(960 down)
//  - mq(between 480 768)

@mixin mq($args...) {
  $conditions: ();
  $medium: "screen";

  @each $group in $args {
    $arg1: list.nth($group, 1);

    // orientation
    @if index(("landscape", "portrait"), $arg1) {
      $conditions: list.append($conditions, "(orientation: #{$arg1})");
    }
    // between
    @else if index(("between", "betweenEq"), $arg1) {
      $from: get-mq-point(list.nth($group, 2), "up");
      @if $arg1 == "betweenEq" {
        $from: get-mq-point(list.nth($group, 2), "upEq");
      }

      $to: get-mq-point(list.nth($group, 3), "down");
      $conditions: list.append(
        $conditions,
        "(min-width: #{$from}) and (max-width: #{$to})"
      );
    }
    // up|down
    @else {
      $direction: list.nth($group, 2);
      $point: get-mq-point($arg1, $direction);

      @if index(("up", "upEq"), $direction) {
        $direction: "min-width";
      } @else {
        // down
        $direction: "max-width";
      }

      $conditions: list.append($conditions, "(#{$direction}: #{$point})");
    }
  }

  $conditions-str: "";
  $is-first: true;

  @each $condition in $conditions {
    @if $is-first == false {
      $conditions-str: "#{$conditions-str}, ";
    }

    $conditions-str: "#{$conditions-str} #{$medium} and #{$condition}";
    $is-first: false;
  }

  @media #{$conditions-str} {
    @content;
  }
}

// -----------------------------------------------------------------------------
// RETINA QUERY

@mixin mq-retina {
  /* stylelint-disable media-feature-name-no-unknown, media-feature-name-no-vendor-prefix */
  @media screen and (min-device-pixel-ratio: 2),
    screen and (min--moz-device-pixel-ratio: 2),
    screen and (-o-min-device-pixel-ratio: 2/1),
    screen and (min-device-pixel-ratio: 2),
    screen and (min-resolution: 192dpi),
    screen and (min-resolution: 2dppx) {
    @content;
  }
  /* stylelint-emable */
}

// -----------------------------------------------------------------------------
// get mq()-ready breakpoint value

@function get-mq-point($value, $direction) {
  @if type-of($value) == "string" {
    $value: map.get($mq-breakpoints, $value);
  } @else {
    $value: strip-unit($value);
  }

  @if $direction == "up" {
    $value: $value + 1;
  }

  @return em($value);
}
